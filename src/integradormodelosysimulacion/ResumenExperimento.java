/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package integradormodelosysimulacion;

import java.awt.Color;
import javax.swing.JOptionPane;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;
import org.jfree.ui.Spacer;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author alberto del yesso
 */
public class ResumenExperimento extends javax.swing.JFrame {

    /**
     * Creates new form ResumenExperimento
     */
    //Atributo
    private static int totalClientes;
    
    public ResumenExperimento(ArrayList listaColeccion, int nroClientes, int nroExperimento) {
        
        
        initComponents();
        //this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("your image here")));
        this.setTitle("Experimento Nro: " + nroExperimento); // that is the code you looking for
        
        totalClientes = nroClientes;
        
        int width = (int) GetScreenWorkingWidth();
        int height = (int) GetScreenWorkingHeight();
        
        this.setSize(width, height);
        
        this.setLocationRelativeTo(null);
        this.lineas.setVisible(false);
        this.barras.setVisible(false);
        
        this.setVisible(true);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResumen = new javax.swing.JTable();
        capa = new javax.swing.JLayeredPane();
        lineas = new javax.swing.JPanel();
        barras = new javax.swing.JPanel();
        botonGraficar = new javax.swing.JButton();
        botonCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableResumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableResumen);

        capa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout lineasLayout = new javax.swing.GroupLayout(lineas);
        lineas.setLayout(lineasLayout);
        lineasLayout.setHorizontalGroup(
            lineasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lineasLayout.setVerticalGroup(
            lineasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout barrasLayout = new javax.swing.GroupLayout(barras);
        barras.setLayout(barrasLayout);
        barrasLayout.setHorizontalGroup(
            barrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1041, Short.MAX_VALUE)
        );
        barrasLayout.setVerticalGroup(
            barrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        capa.setLayer(lineas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        capa.setLayer(barras, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout capaLayout = new javax.swing.GroupLayout(capa);
        capa.setLayout(capaLayout);
        capaLayout.setHorizontalGroup(
            capaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lineas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(capaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(capaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(barras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        capaLayout.setVerticalGroup(
            capaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lineas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(capaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(barras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        botonGraficar.setText("GRAFICAR");
        botonGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGraficarActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar ventana");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(capa)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1065, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(capa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonGraficar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCerrar)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //devuelve el alto de la pantalla
    private static int GetScreenWorkingWidth() {
        return java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds().width;
    }

    //devuelve el ancho de la pantalla
    private static int GetScreenWorkingHeight() {
        return java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds().height;
    }
    
    
    public void cargarTabla(ArrayList listaColeccion, int nroClientes){
        

       DefaultTableModel tableMod = (DefaultTableModel) jTableResumen.getModel();
       
       //Object fila[][] = new Object[9][nroClientes];
       tableMod.setColumnIdentifiers(getColumnas());
       tableMod.setNumRows(nroClientes);
      
       int index;
        //contara la cantidad de clientes
        String s0;
        //Vector de tiempos de servicio.
        ArrayList<Double> servicioTime = (ArrayList<Double>) listaColeccion.get(0);
        String s1;
        //Vector de tiempos entre llegadas.
         ArrayList<Integer> entreLlegadaTime = (ArrayList<Integer>) listaColeccion.get(1);
        String s2;
        //Vector de tiempos de ocio del servidor.
        ArrayList<Integer> ocioTime = (ArrayList<Integer>) listaColeccion.get(2);
        String s3;
        //Vector de tiempos de llegada.
        ArrayList<Double> llegadaTime = (ArrayList<Double>) listaColeccion.get(3);
        String s4;
        //Vector de tiempos de permanencia en el sistema.
        ArrayList<Double> permanenciaTime = (ArrayList<Double>) listaColeccion.get(4);
        String s5;
        //Vector de tiempos de espera en la cola.
        ArrayList<Integer> esperaColaTime = (ArrayList<Integer>) listaColeccion.get(5);
        String s6;
        //Vector de tiempos de salida.
        ArrayList<Double> salidaTime = (ArrayList<Double>) listaColeccion.get(6);
        String s7;
        //Vector que contiene el numero de cliente en la cola.
        ArrayList<Integer> numeroClienteCola = (ArrayList<Integer>) listaColeccion.get(7);
        String s8;
        
        
        for(int i = 0; i < nroClientes; i++){
            index = i + 1;
            s0 = Integer.toString(index);
            tableMod.setValueAt(s0, i, 0);
            s1 = String.format("%.3f", servicioTime.get(i));
            tableMod.setValueAt(s1, i, 1);
            s2 = Integer.toString((int)entreLlegadaTime.get(i));
            tableMod.setValueAt(s2, i, 2);
            s3 = Integer.toString((int)ocioTime.get(i));
            tableMod.setValueAt(s3, i, 3);
            s4 = String.format("%.3f", llegadaTime.get(i));
            tableMod.setValueAt(s4, i, 4);
            s5 = String.format("%.3f", permanenciaTime.get(i));
            tableMod.setValueAt(s5, i, 5);
            s6 = Integer.toString((int) esperaColaTime.get(i));
            tableMod.setValueAt(s6, i, 6);
            s7 = String.format("%.3f", salidaTime.get(i));
            tableMod.setValueAt(s7, i, 7);
            s8 = Integer.toString((int)numeroClienteCola.get(i));
            tableMod.setValueAt(s8, i, 8);
            

        }
       
       jTableResumen.setModel(tableMod);

       
    }
    
        private String[] getColumnas()
    {
          String columna[]=new String[]{"Nro. de Cliente","Tiempo de Servicio", "Tiempo entre llegadas", 
                                        "Tiempo de Ocio","Tiempo de llegadas", "Tiempo de permanencia", "Tiempo de Espera en la cola", 
                                        "Tiempo de Salida", "Nro de Clientes en la cola"};
          return columna;
    }
        

    
    
    private void botonGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGraficarActionPerformed
        // TODO add your handling code here:
        ChartPanel panel;
        JFreeChart chart = null;
        
        
        

            //Grafico de lineas
            
            int validar = 1;
            XYSplineRenderer renderer = new XYSplineRenderer();
            XYSeriesCollection dataset = new XYSeriesCollection();
            ValueAxis x = new NumberAxis();
            ValueAxis y = new NumberAxis();

            XYSeries serie = new XYSeries("Tiempo De Ocio de las Cajas");
            XYSeries serie2 = new XYSeries("Tiempo de espera en la Cola");
            
            
            XYPlot plot;
            lineas.removeAll();
            
            try{
                for (int fila = 0; fila < totalClientes ; fila++){
                    serie.add(Float.parseFloat(String.valueOf(jTableResumen.getValueAt(fila,0))),
                                Float.parseFloat(String.valueOf(jTableResumen.getValueAt(fila,3))));
                    serie2.add(Float.parseFloat(String.valueOf(jTableResumen.getValueAt(fila,0))),
                                Float.parseFloat(String.valueOf(jTableResumen.getValueAt(fila,6))));
                }
            }catch(Exception ex){
                validar = 0;
            }
            
            if(validar ==1){
                dataset.addSeries(serie);
                dataset.addSeries(serie2);
                x.setLabel("Eje x: Nro. Cliente");
                y.setLabel("Eje Y: Tiempo");
                plot = new XYPlot(dataset, x, y, renderer);
                chart = new JFreeChart(plot);
                chart.setTitle("Grafico de Lineas");
            }

            
        panel = new ChartPanel(chart);
        panel.setBounds(5,10,1300,240);
                
        
        lineas.add(panel);
        lineas.repaint();
        
        lineas.setVisible(true);
        capa.setLayer(lineas, 0,0);
    }//GEN-LAST:event_botonGraficarActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ResumenExperimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ResumenExperimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ResumenExperimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ResumenExperimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ResumenExperimento().setVisible(true);
//                
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barras;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonGraficar;
    private javax.swing.JLayeredPane capa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResumen;
    private javax.swing.JPanel lineas;
    // End of variables declaration//GEN-END:variables
}
